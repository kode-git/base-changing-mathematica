(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     65181,       1389]
NotebookOptionsPosition[     60921,       1305]
NotebookOutlinePosition[     61349,       1322]
CellTagsIndexPosition[     61306,       1319]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{":", "Title", ":", " ", "BaseConvertorPackage"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Context", ":", " ", "BaseConvertorPackage`"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{":", "Author", ":", " ", 
      RowBox[{"Mario", " ", "Sessa"}]}], " ", "&"}], " ", "Francesco", " ", 
    "Natati"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Summary", ":", " ", 
    RowBox[{
    "This", " ", "is", " ", "the", " ", "package", " ", "to", " ", 
     "estabilish", " ", "the", " ", "logic", " ", "for", " ", "changing", " ",
      "the", " ", "base", " ", "from", " ", "n", " ", "to", " ", "base", " ", 
     "10", " ", "and", " ", "10", " ", "to", " ", "base", " ", 
     RowBox[{"n", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Copyright", ":", " ", 
    RowBox[{
     RowBox[{"Alma", " ", "Mater", " ", "Studiorum"}], " ", "-", " ", 
     RowBox[{"Bologna", " ", "2021"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Package", " ", "Version"}], ":", " ", "1"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{":", 
    RowBox[{"Mathematica", " ", "Version"}], ":", " ", "12.2"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{":", "History", ":", " ", "\\\\"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", "Keywords", ":", " ", "base"}], ",", " ", "convertor"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Sources", ":", " ", "\\\\"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Discussion", ":", " ", "\\\\"}], " ", "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.828861677964623*^9, 3.8288618839748697`*^9}, {
  3.828863430302635*^9, 3.828863433476419*^9}, {3.8291998122784653`*^9, 
  3.829199813007018*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"dc8673ef-990c-4ab4-a413-0ea8a2a2c4a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BeginPackage", "[", "\"\<BaseConvertorPackage`\>\"", "]"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.828861912575403*^9, 3.82886193066146*^9}, {
  3.8288623030616407`*^9, 3.828862303811872*^9}, {3.828863270883473*^9, 
  3.828863273964057*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"83ba9a24-105e-453d-9ab2-057fc8b72e8f"],

Cell[BoxData["\<\"BaseConvertorPackage`\"\>"], "Output",
 CellChangeTimes->{{3.8288619253880987`*^9, 3.8288619312236853`*^9}, 
   3.828862313347885*^9, 3.828863054351088*^9, 3.828863209896085*^9, 
   3.8288632440802917`*^9, 3.82886327447279*^9, 3.828863308403469*^9, 
   3.8288633662016153`*^9, {3.8288634125361233`*^9, 3.828863438348412*^9}, 
   3.829020422245496*^9, 3.829021906253648*^9, 3.829022120839266*^9, {
   3.829187234782084*^9, 3.829187234967944*^9}, 3.829191617461318*^9, 
   3.829191900906138*^9, 3.829193157468171*^9, 3.8291936786974*^9, 
   3.82919507090889*^9, 3.829195154848454*^9, 3.8291999370100946`*^9, {
   3.829363722814807*^9, 3.829363722901814*^9}, {3.829447274354781*^9, 
   3.829447274450078*^9}, 3.829619323213194*^9, {3.8296257411716843`*^9, 
   3.829625741305622*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"ac97c0f5-e226-4c1d-bf88-bad9da2cf133"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BasePanelProject", "::", "usage"}], " ", "=", " ", 
  "\"\<BasePanel[]\n\tDefine a table and show the convertion from an input \
base to an output base defined by manipulation tool of the panel. The last \
two parameters are optional and have as default value the base 10 and 2\n\
\>\""}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.828862098345055*^9, 3.828862224016768*^9}, {
   3.828863316784349*^9, 3.8288633176285067`*^9}, 3.828863486946001*^9, {
   3.829024186548792*^9, 3.8290242206783447`*^9}, {3.8290242622273912`*^9, 
   3.829024297683467*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9e4ab47b-4075-49ba-8051-48e74256a661"],

Cell[BoxData["\<\"BasePanel[]\\n\\tDefine a table and show the convertion \
from an input base to an output base defined by manipulation tool of the \
panel. The last two parameters are optional and have as default value the \
base 10 and 2\\n\"\>"], "Output",
 CellChangeTimes->{
  3.828863209921342*^9, 3.8288632440861387`*^9, {3.828863308415094*^9, 
   3.82886332241131*^9}, 3.828863366214877*^9, {3.82886341254347*^9, 
   3.828863438354034*^9}, 3.829020422251272*^9, 3.829021906260207*^9, 
   3.8290221208662167`*^9, {3.8291872347888737`*^9, 3.8291872350190897`*^9}, 
   3.8291916175162687`*^9, 3.829191901008649*^9, 3.8291931575535316`*^9, 
   3.829193678742885*^9, 3.829195070927163*^9, 3.829195154855125*^9, 
   3.829199937017391*^9, {3.829363722819602*^9, 3.829363722906817*^9}, {
   3.829447274361424*^9, 3.829447274464283*^9}, 3.8296193232176723`*^9, {
   3.829625741176873*^9, 3.829625741319046*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"c6baaaf9-970f-4476-9160-8d9c545e11ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BaseConverterProject", "::", "usage"}], " ", "=", " ", 
  "\"\<BaseConvertor[value, inputBase, outputBase]\n\tDefine a convertion of \
value from base inputBase to outputBase with some\n\tconditions and controls \
about the value and inputBase/outputBase format:\n\tvalue must be an integer\n\
\tinputBase and outputBase must be integer between 2 and 61\t\>\""}]], "Input",\

 InitializationCell->True,
 InitializationGroup->True,
 CellChangeTimes->{{3.828863130557317*^9, 3.828863130558015*^9}, {
  3.828863329694722*^9, 3.8288633552845984`*^9}, {3.8294472638856373`*^9, 
  3.8294472640440893`*^9}, {3.829447863518664*^9, 3.8294478638376427`*^9}, {
  3.8294499358461037`*^9, 3.829449957563003*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"36c52f8c-b143-44bf-adf6-d9a55d959f3e"],

Cell[BoxData["\<\"BaseConvertor[value, inputBase, outputBase]\\n\\tDefine a \
convertion of value from base inputBase to outputBase with \
some\\n\\tconditions and controls about the value and inputBase/outputBase \
format:\\n\\tvalue must be an integer\\n\\tinputBase and outputBase must be \
integer between 2 and 61\\t\"\>"], "Output",
 CellChangeTimes->{{3.828863351326748*^9, 3.828863366243939*^9}, {
   3.8288634125708838`*^9, 3.828863438380015*^9}, 3.8290204222740726`*^9, 
   3.829021906287076*^9, 3.829022120872067*^9, {3.8291872347950077`*^9, 
   3.829187235026163*^9}, 3.829191617522049*^9, 3.829191901128326*^9, 
   3.8291931575603523`*^9, 3.829193678764759*^9, 3.829195070961483*^9, 
   3.829195154907599*^9, 3.8291999370435553`*^9, {3.82936372283639*^9, 
   3.8293637229115257`*^9}, {3.829447274379096*^9, 3.829447274469672*^9}, 
   3.829447864515315*^9, {3.829449937037705*^9, 3.8294499581249113`*^9}, 
   3.8296193232445383`*^9, {3.829625741196294*^9, 3.829625741340508*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"6a7ae74f-1ddf-4471-ae9e-c8f7d53e1ddf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\n", "\"\<\>"}]], "Input",
 CellChangeTimes->{{3.828861945258877*^9, 3.828862095540606*^9}, {
   3.8288622274319973`*^9, 3.8288622603711843`*^9}, {3.8288631274032507`*^9, 
   3.828863177069255*^9}, {3.828863216637311*^9, 3.828863234154035*^9}, {
   3.828863279895814*^9, 3.828863292614687*^9}, 3.828863343951037*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"efc5497a-4240-4b55-b31a-e89f04d2ed94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Begin", "[", "\"\<Private`\>\"", "]"}]], "Code",
 CellChangeTimes->{{3.8288623104913*^9, 3.828862310622814*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"700f309b-d38f-4f21-a2e9-5c63753d2137"],

Cell[BoxData["\<\"Private`\"\>"], "Output",
 CellChangeTimes->{
  3.828863060788678*^9, 3.828863209962535*^9, 3.828863244147821*^9, {
   3.828863303888382*^9, 3.828863308448839*^9}, {3.828863366298032*^9, 
   3.82886343840774*^9}, 3.8290204222790117`*^9, 3.829021906343066*^9, 
   3.829022120896983*^9, {3.8291872348449507`*^9, 3.829187235092498*^9}, 
   3.8291916175282593`*^9, 3.8291919011728888`*^9, 3.8291931576168118`*^9, 
   3.8291936788079033`*^9, 3.82919507097701*^9, 3.829195155014367*^9, 
   3.829199937057239*^9, {3.829363722840633*^9, 3.829363722973757*^9}, {
   3.82944727438414*^9, 3.829447274529767*^9}, 3.829619323250823*^9, {
   3.8296257412044277`*^9, 3.8296257414044447`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"3050c1a3-aaf7-4a29-9112-3fc7f50f574d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BasePanelProject", "[", "]"}], " ", ":=", "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t\t", 
      RowBox[{"Manipulate", "[", "\n", "\t\t   ", 
       RowBox[{"Value", ",", " ", "\n", "\t\t   ", 
        RowBox[{"{", 
         RowBox[{"Value", ",", "1", ",", "10000", ",", "1"}], "}"}], ",", " ",
         "\n", "\t\t   ", 
        RowBox[{"{", 
         RowBox[{"InputBase", ",", "2", ",", "36", ",", "1"}], "}"}], ",", 
        " ", "\n", "\t\t   ", 
        RowBox[{"{", 
         RowBox[{"OutputBase", ",", "2", ",", "36", ",", "1"}], "}"}], ",", 
        "\n", "\t\t   ", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Genera Esercizio\>\"", ",", "True"}], "]"}], ",", "\n", 
        "\t\t   ", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Verifica Risultato\>\"", ",", "True"}], "]"}], ",", 
        "\n", "\t\t   ", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Mostra Soluzione\>\"", ",", " ", "True"}], "]"}], ",", 
        "\n", "\t\t   ", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Pulisci Soluzione\>\"", ",", " ", "True"}], "]"}]}], 
       "\n", "\t       ", "]"}]}], "\n", "    ", "]"}]}], ";"}], "\n", "    ",
   "\n", "    "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BaseConverterProject", "[", 
     RowBox[{"valueNum_", ",", " ", "inputBase_", ",", " ", "outputBase_"}], 
     "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "val", ",", " ", "out", ",", " ", "res", ",", " ", "rest", ",", " ", 
        "result", ",", " ", "strLine"}], "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "list", " ", "will", " ", "be", " ", "append", " ", "elements", " ", 
         "and", " ", "put", " ", "it", " ", "in", " ", "a", " ", "column", 
         " ", "function"}], " ", "*)"}], "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerQ", "[", "inputBase", "]"}], "&&", 
          RowBox[{"IntegerQ", "[", "outputBase", "]"}], " ", "&&", " ", 
          RowBox[{"outputBase", " ", "<", " ", "61"}], " ", "&&", " ", 
          RowBox[{"inputBase", " ", "<", " ", "61"}], " ", "&&", " ", 
          RowBox[{"outputBase", " ", ">=", " ", "2"}], " ", "&&", " ", 
          RowBox[{"inputBase", " ", ">=", " ", "2"}]}], ",", "\n", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"BaseForm", "[", 
           RowBox[{
            RowBox[{"FromDigits", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "valueNum", "]"}], ",", "inputBase"}], 
             "]"}], ",", "outputBase"}], "]"}], " ", "*)"}], "\n", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"inputBase", " ", "\[Equal]", " ", "outputBase"}], ",", 
           "\n", "\t\t    ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "than", " ", "result", " ", "is", " ", "equal", " ", "to", " ", 
             "valueNum"}], " ", "*)"}], "\n", "\t\t    ", 
           RowBox[{
           "Print", "[", 
            "\"\<Input Base and OutputBase are the same, value don't change\>\
\"", "]"}], "\n", "\t\t\t", ",", "\n", "\t\t\t", 
           RowBox[{"(*", " ", "else", " ", "*)"}], "\n", "\t\t\t", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"inputBase", " ", "\[Equal]", " ", "10"}], ",", " ", 
             "\n", "\t\t       ", 
             RowBox[{"(*", " ", 
              RowBox[{"10", " ", "TO", " ", "N"}], " ", "*)"}], "\n", 
             "\t\t       ", 
             RowBox[{"Converter10ToN", "[", 
              RowBox[{"valueNum", ",", " ", "outputBase"}], "]"}], ",", "\n", 
             "\t\t       ", ",", " ", "\n", "\t\t       ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "else", " ", "the", " ", "input", " ", "base", " ", "is", " ", 
               "not", " ", "10"}], " ", "*)"}], "\n", "\t\t       ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"outputBase", " ", "\[Equal]", " ", "10"}], ",", "\n", 
               "\t\t          ", 
               RowBox[{"(*", " ", 
                RowBox[{"N", " ", "to", " ", "10"}], " ", "*)"}], "\n", 
               "\t\t          ", 
               RowBox[{"ConverterNTo10", "[", 
                RowBox[{"valueNum", ",", " ", "inputBase"}], "]"}], ",", "\n",
                "\t\t          ", 
               RowBox[{"(*", " ", 
                RowBox[{
                "base", " ", "X", " ", "To", " ", "base", " ", "Y", " ", 
                 "with", " ", "X", " ", "and", " ", "Y", " ", "different", 
                 " ", "to", " ", "10"}], " ", "*)"}], "\n", "\t\t          ", 
               
               RowBox[{"ConverterDiff10", "[", 
                RowBox[{
                "valueNum", ",", " ", "inputBase", ",", " ", "outputBase"}], 
                "]"}]}], "\n", "\t\t         ", "]"}]}], "\n", "\t\t      ", 
            "]"}]}], "     ", "\n", "\t\t   ", "]"}], "\n", "\t\t", ",", "\n",
          "\t\t", 
         RowBox[{
         "Print", "[", 
          "\"\<Bases in not between 2 and 16 or values are not integers!\>\"",
           "]"}]}], "\n", "\t\t", "]"}]}]}], "\n", "\t", "]"}]}], ";"}], "\n",
   "\t", "\n", "\t\t   ", "\n", "\t"}], "\n"}], "Code",
 CellChangeTimes->{{3.8288623490021477`*^9, 3.828862417134672*^9}, {
   3.828862559115164*^9, 3.828862560295457*^9}, {3.8288626174968777`*^9, 
   3.8288626982373857`*^9}, {3.828862738736709*^9, 3.828862835896798*^9}, {
   3.828863014520433*^9, 3.828863020459037*^9}, {3.8288630709923573`*^9, 
   3.828863071288457*^9}, {3.828863105121665*^9, 3.828863122575528*^9}, 
   3.828863237460566*^9, 3.828863296965271*^9, {3.828863359950121*^9, 
   3.828863361466893*^9}, {3.8290190374159107`*^9, 3.8290192079971247`*^9}, {
   3.829019815143512*^9, 3.829019838602909*^9}, {3.8290201173779984`*^9, 
   3.829020120381616*^9}, {3.829020171740335*^9, 3.829020397976673*^9}, {
   3.829020515159178*^9, 3.829020695333703*^9}, {3.829020766902997*^9, 
   3.829020767175626*^9}, {3.8290208123299637`*^9, 3.829020940592771*^9}, {
   3.829021290925803*^9, 3.8290214333828897`*^9}, {3.829021494331662*^9, 
   3.829021510905505*^9}, {3.829021542214316*^9, 3.8290215655974483`*^9}, {
   3.829021604729607*^9, 3.8290216601862288`*^9}, {3.829021757501032*^9, 
   3.829021799953506*^9}, {3.829021889923073*^9, 3.8290218947935762`*^9}, {
   3.829021947971056*^9, 3.8290219741944017`*^9}, {3.829022037002534*^9, 
   3.82902206375419*^9}, {3.82902214072094*^9, 3.829022201536229*^9}, {
   3.829022404384213*^9, 3.8290224205874853`*^9}, {3.829022460226902*^9, 
   3.829022589324686*^9}, {3.829022789538087*^9, 3.829022953642707*^9}, {
   3.829023014304188*^9, 3.829023032717963*^9}, {3.829023090807291*^9, 
   3.829023216858062*^9}, {3.829023389449436*^9, 3.829023423137786*^9}, {
   3.829023458214953*^9, 3.829023669196022*^9}, {3.829023719641465*^9, 
   3.829023851474339*^9}, {3.8290238896135807`*^9, 3.829023952934907*^9}, {
   3.8290240048654623`*^9, 3.829024042755047*^9}, {3.829024165860629*^9, 
   3.829024176220673*^9}, {3.829024679383688*^9, 3.8290247285414047`*^9}, {
   3.829025086070685*^9, 3.8290251381058283`*^9}, {3.829025204811133*^9, 
   3.829025213519374*^9}, {3.829025269842008*^9, 3.829025314323553*^9}, {
   3.829025349878738*^9, 3.829025420785933*^9}, {3.829025472900619*^9, 
   3.829025662747316*^9}, {3.829025741738667*^9, 3.829025813944004*^9}, {
   3.829025886178851*^9, 3.829025942726927*^9}, {3.8290265217866783`*^9, 
   3.8290265506281967`*^9}, {3.829026601821492*^9, 3.829026624436199*^9}, {
   3.8290267873821993`*^9, 3.829026831124312*^9}, {3.8290269561359453`*^9, 
   3.829027043890615*^9}, {3.829027157226611*^9, 3.8290272734367933`*^9}, {
   3.829027728443694*^9, 3.829027849300539*^9}, {3.829027885484631*^9, 
   3.829027901825877*^9}, {3.8290279339646473`*^9, 3.829028075464603*^9}, 
   3.8290281612111883`*^9, {3.829028211787837*^9, 3.829028227670683*^9}, {
   3.829028267267809*^9, 3.829028273647016*^9}, {3.829028332222122*^9, 
   3.829028334029769*^9}, {3.8290291988557987`*^9, 3.8290292131656437`*^9}, {
   3.829029520334593*^9, 3.829029551224649*^9}, {3.8290298099408617`*^9, 
   3.8290298111808*^9}, {3.829187268065186*^9, 3.829187343369308*^9}, {
   3.829187428031342*^9, 3.8291875424381447`*^9}, {3.829187765797092*^9, 
   3.829187779747223*^9}, {3.829187815573348*^9, 3.829187816783017*^9}, {
   3.829187893224104*^9, 3.829188093267795*^9}, {3.829188299178694*^9, 
   3.8291883357227507`*^9}, {3.829188403779402*^9, 3.829188413700861*^9}, {
   3.829188951230507*^9, 3.829188952211317*^9}, {3.829189109946601*^9, 
   3.829189279915209*^9}, {3.829189336840159*^9, 3.829189350313713*^9}, {
   3.829189472043243*^9, 3.829189479069408*^9}, {3.8291897301668873`*^9, 
   3.829189837602336*^9}, {3.829190411554213*^9, 3.829190417770496*^9}, {
   3.8291905064850683`*^9, 3.8291905390303993`*^9}, {3.8291906392484293`*^9, 
   3.829190905727532*^9}, {3.829190964515036*^9, 3.8291909886888237`*^9}, {
   3.8291910489358473`*^9, 3.829191049702162*^9}, {3.82919236028692*^9, 
   3.829192364782233*^9}, 3.8291924619746428`*^9, {3.8291926022927837`*^9, 
   3.8291928001200943`*^9}, {3.82919284363799*^9, 3.829192849310472*^9}, {
   3.8291929451652727`*^9, 3.829192973299808*^9}, {3.829193046777128*^9, 
   3.829193046991482*^9}, {3.829193144073872*^9, 3.829193144886216*^9}, {
   3.829193387315996*^9, 3.829193422561736*^9}, {3.829193496901554*^9, 
   3.8291935015209846`*^9}, {3.829193534620934*^9, 3.8291936724306498`*^9}, {
   3.829194001814773*^9, 3.8291941448435163`*^9}, {3.82919420152354*^9, 
   3.8291942263883047`*^9}, {3.8291942923377333`*^9, 3.829194509352016*^9}, {
   3.829194558644164*^9, 3.829194712705743*^9}, {3.829194838247273*^9, 
   3.829194875334868*^9}, {3.8291949252782803`*^9, 3.8291949448427753`*^9}, {
   3.8291973900593367`*^9, 3.829197390212331*^9}, {3.829197431731647*^9, 
   3.829197435339926*^9}, {3.829197486851676*^9, 3.829197487882225*^9}, {
   3.829197540335451*^9, 3.829197633240019*^9}, {3.8291976639523983`*^9, 
   3.829197693439569*^9}, {3.829199885778887*^9, 3.829199893357807*^9}, {
   3.829447217726225*^9, 3.8294472260905657`*^9}, {3.829447708670559*^9, 
   3.8294477091673717`*^9}, {3.829448404929057*^9, 3.829448420848238*^9}, {
   3.829448457328066*^9, 3.829448457504998*^9}, {3.829448840322358*^9, 
   3.8294488726274223`*^9}, {3.829449972316331*^9, 3.82945000969184*^9}, {
   3.8294504622690887`*^9, 3.829450466060336*^9}, {3.8296229815688868`*^9, 
   3.829623003859782*^9}, {3.829623039429934*^9, 3.829623042455674*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"7d260a63-9de2-47a9-9cab-505ba266263a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Internal", " ", "functions"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Converter10ToN", "[", 
      RowBox[{"valueNum_", ",", " ", "outputBase_"}], "]"}], " ", ":=", " ", 
     "\n", "   ", 
     RowBox[{"(*", " ", 
      RowBox[{"Print", " ", "process", " ", "10", " ", "to", " ", "N"}], " ", 
      "*)"}], "\n", "   ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "val", ",", " ", "out", ",", " ", "res", ",", " ", "rest", ",", " ", 
         "result", ",", " ", "strLine", ",", " ", "restComp", ",", " ", 
         "listLet", ",", " ", "digits", ",", " ", "i"}], "}"}], ",", "\n", 
       "\t\t   ", 
       RowBox[{"(*", " ", 
        RowBox[{"Input", " ", "controls"}], " ", "*)"}], "\n", "\t\t  ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"!", 
           RowBox[{"IntegerQ", "[", "valueNum", "]"}]}], " ", "||", " ", 
          RowBox[{"valueNum", " ", ">", " ", "10000"}], " ", "||", " ", 
          RowBox[{"!", 
           RowBox[{"IntegerQ", "[", "outputBase", "]"}]}], " ", "||", " ", 
          RowBox[{"valueNum", " ", "<", " ", "0"}], " ", "||", " ", 
          RowBox[{"outputBase", " ", "<", " ", "0"}]}], ",", "\n", 
         "\t\t       ", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<Input values not supported\>\"", "]"}], 
          ";", "\n", "\t\t       ", 
          RowBox[{"Return", "[", "]"}], ";"}], "\n", "\t\t       ", ",", "\n",
          "\t\t   ", "\n", "\t\t   ", 
         RowBox[{
          RowBox[{"val", " ", "=", " ", "valueNum"}], ";", "\n", "\t\t   ", 
          RowBox[{"out", " ", "=", " ", "outputBase"}], ";", "\n", "\t\t   ", 
          
          RowBox[{"res", " ", "=", " ", 
           RowBox[{"-", "1"}]}], ";", "\n", "\t\t   ", 
          RowBox[{"restComp", " ", "=", " ", 
           RowBox[{"{", "}"}]}], ";", "\n", "\t\t   ", 
          RowBox[{"digits", " ", "=", " ", 
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "9"}], "]"}]}], ";", "\n", "\t\t   ", 
          RowBox[{"listLet", " ", "=", " ", 
           RowBox[{"Join", "[", 
            RowBox[{"digits", ",", 
             RowBox[{"ToUpperCase", "[", 
              RowBox[{"CharacterRange", "[", 
               RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], "]"}], ",", 
             " ", 
             RowBox[{"ToLowerCase", "[", 
              RowBox[{"CharacterRange", "[", 
               RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], "]"}]}], 
            "]"}]}], ";", " ", "\n", "\t\t   ", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "alphabet", " ", "of", " ", "the", " ", "base", " ", "from", " ", 
             "base", " ", "2", " ", "to", " ", "base", " ", "61"}], ",", " ", 
            "\n", "\t\t   ", 
            RowBox[{"0", " ", "-", " ", 
             RowBox[{
             "9", " ", "base", " ", "2", " ", "to", " ", "10", " ", "\n", 
              "\t\t   ", "A"}], " ", "-", " ", 
             RowBox[{
             "Z", " ", "base", " ", "11", " ", "to", " ", "36", "\n", 
              "\t\t   ", "a"}], " ", "-", " ", 
             RowBox[{"z", " ", "base", " ", "37", " ", "to", " ", "61"}]}]}], 
           "\n", "\t\t   ", "*)"}], "\n", "\t\t   ", "\n", "\t\t   ", 
          RowBox[{"result", " ", "=", " ", 
           RowBox[{"{", "}"}]}], ";", "\n", "\t\t   ", "\n", "\t\t   ", 
          RowBox[{"(*", " ", 
           RowBox[{"Base", " ", "Analysis"}], " ", "*)"}], "\n", "\t\t   ", 
          "\n", "\t\t    ", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"res", " ", "\[NotEqual]", " ", "0"}], ",", "  ", "\n", 
            "\t\t    ", 
            RowBox[{"(*", " ", 
             RowBox[{"to", " ", "check"}], " ", "*)"}], "\n", "\t\t       ", 
            RowBox[{
             RowBox[{"res", " ", "=", " ", 
              RowBox[{"Quotient", "[", 
               RowBox[{"val", ",", " ", "out"}], "]"}]}], ";", "\n", 
             "\t\t       ", 
             RowBox[{"rest", " ", "=", " ", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"val", ",", "out"}], "]"}], " ", "+", " ", "1"}]}], 
             ";", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "1", " ", "is", " ", "for", " ", "Mathematica", " ", 
                "indexing", " ", "1", " ", "to", " ", "N", " ", "and", " ", 
                "not", " ", "0", " ", "to", " ", "N"}], " ", "-", " ", "1"}], 
              " ", "*)"}], "\n", "\t\t       ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"restComp", ",", 
               RowBox[{"ToString", "[", 
                RowBox[{"Part", "[", 
                 RowBox[{"listLet", ",", " ", "rest"}], "]"}], "]"}]}], "]"}],
              ";", "\n", "\t\t       ", 
             RowBox[{"strLine", " ", "=", " ", 
              RowBox[{
               RowBox[{"ToString", "[", "val", "]"}], " ", "<>", " ", 
               "\"\< / \>\"", " ", "<>", " ", 
               RowBox[{"ToString", "[", "out", "]"}], " ", "<>", " ", 
               "\"\< = \>\"", " ", "<>", " ", 
               RowBox[{"ToString", "[", "res", "]"}], " ", "<>", " ", 
               "\"\< R \>\"", " ", "<>", " ", 
               RowBox[{"ToString", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{"val", ",", "out"}], "]"}], "]"}], " ", "<>", " ", 
               "\"\< = \>\"", " ", "<>", " ", 
               RowBox[{"ToString", "[", 
                RowBox[{"Part", "[", 
                 RowBox[{"listLet", ",", " ", "rest"}], "]"}], "]"}]}]}], ";",
              "\n", "\t\t       ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"result", ",", " ", "strLine"}], "]"}], ";", "\n", 
             "\t\t       ", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"result", ",", " ", "\"\<----------------\>\""}], "]"}],
              ";", "\n", "\t\t       ", 
             RowBox[{"val", " ", "=", " ", "res"}], ";"}]}], " ", "\n", 
           "\t\t   ", "]"}], ";", "\n", "\t\t   ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", " ", 
            RowBox[{"StringJoin", "[", 
             RowBox[{"\"\<Result is: \>\"", ",", " ", 
              RowBox[{"Reverse", "[", "restComp", "]"}]}], "]"}]}], "]"}], 
          ";", "\n", "\n", "\t\t   ", "\n", "\t\t   ", 
          RowBox[{"(*", " ", 
           RowBox[{"Print", " ", "section"}], " ", "*)"}], "\n", 
          "            ", 
          RowBox[{"Column", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
        "\t\t  ", "]"}]}], " ", "\n", "                 ", 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\n", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConverterNTo10", "[", 
      RowBox[{"num_", ",", " ", "base_"}], "]"}], ":=", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"Problem", ":", " ", 
       RowBox[{"101", "A", " ", 
        RowBox[{"don", "'"}], "t", " ", "work", " ", "as", " ", "well", " ", 
        "as", " ", "any", " ", "base", " ", "superior", " ", "than", " ", 
        "16"}]}], " ", "*)"}], "\n", "   ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "listDigits", ",", " ", "expPos", ",", " ", "result", ",", " ", "i", 
         ",", " ", "resultInt", ",", " ", "size"}], "}"}], ",", " ", "\n", 
       "   ", "\n", "      ", 
       RowBox[{
        RowBox[{"listDigits", " ", "=", " ", 
         RowBox[{"IntegerDigits", "[", 
          RowBox[{"num", ",", " ", "base"}], "]"}]}], ";", 
        RowBox[{"(*", " ", 
         RowBox[{
         "I", " ", "have", " ", "a", " ", "list", " ", "of", " ", "digits"}], 
         " ", "*)"}], "\n", "      ", 
        RowBox[{"size", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "listDigits", "]"}], "-", "1"}], ")"}]}], 
        ";", "\n", "      ", 
        RowBox[{"expPos", " ", "=", " ", 
         RowBox[{"Reverse", "[", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", " ", "size"}], "]"}], "]"}]}], ";", "\n", 
        "      ", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"List", " ", "of", " ", "strings"}], " ", "*)"}], "\n", 
        "      ", 
        RowBox[{"(*", " ", 
         RowBox[{"Formatting", " ", "expression"}], " ", "*)"}], "\n", 
        "      ", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"i", " ", "<=", " ", "size"}], ",", " ", 
          RowBox[{"i", "++"}], ",", " ", "\n", "           ", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", " ", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"listDigits", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], " ", "<>", " ", 
              "\"\< x \>\"", " ", "<>", " ", 
              RowBox[{"ToString", "[", "base", "]"}], " ", "<>", " ", 
              "\"\<^\>\"", " ", "<>", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{"size", " ", "-", "i", " ", "+", " ", "1"}], "]"}], 
              " ", "<>", " ", "\"\< + \>\""}]}], "]"}], ";"}]}], 
         "                  ", "\n", "         ", "]"}], ";", "\n", "       ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"result", ",", " ", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"listDigits", "[", 
             RowBox[{"[", 
              RowBox[{"size", " ", "+", " ", "1"}], "]"}], "]"}], "]"}], " ", 
           "<>", " ", "\"\< x \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "base", "]"}], " ", "<>", " ", 
           "\"\<^\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "0", "]"}]}]}], "]"}], ";", "\n", "     ",
         "\n", "      ", 
        RowBox[{"resultInt", " ", "=", " ", 
         RowBox[{"FromDigits", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "num", "]"}], ",", " ", "base"}], "]"}]}],
         ";", "\n", "      ", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"result", ",", " ", 
          RowBox[{"\"\< = \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "resultInt", "]"}]}]}], "]"}], ";", "\n", 
        "      ", 
        RowBox[{"Row", "[", "result", "]"}]}]}], "\n", "      ", "\n", 
      "      ", "\n", "   ", "]"}]}], ";"}], "\n", "   ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ConverterDiff10", "[", 
      RowBox[{
      "valueNum3_", ",", " ", "inputBase3_", ",", " ", "outputBase3_"}], 
      "]"}], " ", ":=", "\n", "\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", "\n", "\t", "True"}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"ConverterNTo10", "[", 
    RowBox[{"100", ",", "16"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.829194168962496*^9, 3.82919418308774*^9}, {
   3.8291948591595783`*^9, 3.829194865720334*^9}, {3.829194955341823*^9, 
   3.829195031363605*^9}, {3.829195094895567*^9, 3.829195122503929*^9}, {
   3.8291952190112123`*^9, 3.8291952694792147`*^9}, {3.8291953312231617`*^9, 
   3.8291954041572323`*^9}, {3.829195478536775*^9, 3.829195695523725*^9}, {
   3.829195735686088*^9, 3.829195867973084*^9}, {3.829195904631689*^9, 
   3.82919597923143*^9}, {3.829196009986655*^9, 3.829196053335503*^9}, {
   3.829196086062448*^9, 3.829196311121078*^9}, {3.829196344285775*^9, 
   3.829196637426208*^9}, {3.8291966823977203`*^9, 3.82919696416453*^9}, {
   3.829196999575616*^9, 3.829197330251876*^9}, {3.829197900678389*^9, 
   3.829197905073144*^9}, {3.82919859923709*^9, 3.829198615507577*^9}, {
   3.829198648404315*^9, 3.829198769597036*^9}, {3.82919881188752*^9, 
   3.829199104531562*^9}, {3.829199244078381*^9, 3.829199402886931*^9}, {
   3.829199534969489*^9, 3.8291995599721947`*^9}, {3.829199619280904*^9, 
   3.829199679830264*^9}, {3.8293638023961067`*^9, 3.8293638967800198`*^9}, {
   3.829364391012425*^9, 3.8293644021037607`*^9}, {3.829364474446056*^9, 
   3.8293644947592707`*^9}, {3.829364525911961*^9, 3.829364546309266*^9}, {
   3.829365828305752*^9, 3.829365912144165*^9}, {3.8293659626113*^9, 
   3.8293660415101767`*^9}, {3.829366113822847*^9, 3.829366233376444*^9}, {
   3.829366282669771*^9, 3.829366314827092*^9}, 3.8293664276537657`*^9, {
   3.829366463843732*^9, 3.829366495476522*^9}, {3.8293666873615513`*^9, 
   3.829366725012026*^9}, {3.829366760963204*^9, 3.829366835918681*^9}, {
   3.829366866137767*^9, 3.829366914567506*^9}, {3.829366956531678*^9, 
   3.829366966556191*^9}, {3.829367000546959*^9, 3.829367009283164*^9}, {
   3.829367073813489*^9, 3.829367081788651*^9}, {3.829367174827717*^9, 
   3.829367177158622*^9}, {3.829367450923916*^9, 3.829367534657469*^9}, {
   3.829367576562233*^9, 3.829367605641781*^9}, {3.829367754684388*^9, 
   3.829367772147072*^9}, {3.829368488035448*^9, 3.829368498085767*^9}, {
   3.8293686400483837`*^9, 3.829368643772258*^9}, {3.8293688194093924`*^9, 
   3.8293688485210037`*^9}, {3.82936891684409*^9, 3.829368918415395*^9}, {
   3.8293689776075687`*^9, 3.8293690306344013`*^9}, {3.8293690634563503`*^9, 
   3.829369087022036*^9}, {3.829369130224872*^9, 3.829369171770543*^9}, 
   3.8293692508311863`*^9, {3.8293698134972963`*^9, 3.8293698564165077`*^9}, {
   3.829370018837224*^9, 3.829370140869082*^9}, {3.829370250599661*^9, 
   3.829370251073039*^9}, {3.829370282851492*^9, 3.829370290790958*^9}, {
   3.829370438364128*^9, 3.829370440526823*^9}, {3.829370567272513*^9, 
   3.829370605917889*^9}, {3.829370854452895*^9, 3.829370897151037*^9}, {
   3.829371037694872*^9, 3.829371038634039*^9}, {3.8293710896025257`*^9, 
   3.8293711571922207`*^9}, {3.829371193245594*^9, 3.829371195605135*^9}, {
   3.8293712258741817`*^9, 3.82937126503102*^9}, {3.8293713310814753`*^9, 
   3.829371360066992*^9}, {3.829371460299644*^9, 3.8293714647495613`*^9}, {
   3.829371526107266*^9, 3.829371585280723*^9}, {3.829371712242136*^9, 
   3.829371712671288*^9}, {3.829371864924239*^9, 3.82937188366155*^9}, {
   3.829371960129963*^9, 3.829372036105852*^9}, {3.829447135184607*^9, 
   3.829447212350308*^9}, {3.829447299488882*^9, 3.829447439778009*^9}, {
   3.8294475639883137`*^9, 3.8294475919715357`*^9}, {3.829447658126463*^9, 
   3.829447663469955*^9}, {3.829447702913994*^9, 3.829447767870178*^9}, {
   3.8294478252329893`*^9, 3.8294478507531757`*^9}, {3.829447883056694*^9, 
   3.8294478868796988`*^9}, {3.829447943071672*^9, 3.8294479449750443`*^9}, {
   3.829447990033094*^9, 3.8294481268489437`*^9}, {3.829448206048484*^9, 
   3.829448278482877*^9}, {3.829448365041285*^9, 3.8294483818416367`*^9}, {
   3.829448687827067*^9, 3.829448690464643*^9}, {3.829449546687018*^9, 
   3.829449621738471*^9}, {3.829449728332053*^9, 3.829449728491273*^9}, {
   3.829449906239362*^9, 3.8294499063308363`*^9}, {3.829450044845997*^9, 
   3.829450098059166*^9}, {3.8294501895973587`*^9, 3.829450220475419*^9}, {
   3.829450312207605*^9, 3.82945034725321*^9}, {3.829450421980953*^9, 
   3.829450422072338*^9}, {3.829450528830838*^9, 3.829450548749803*^9}, {
   3.829619317817923*^9, 3.8296194240467052`*^9}, {3.829619457103979*^9, 
   3.829619457376404*^9}, {3.829619980769723*^9, 3.8296199824405003`*^9}, {
   3.8296202906463823`*^9, 3.829620291473665*^9}, {3.8296204115757103`*^9, 
   3.8296204626589127`*^9}, 3.829620512708766*^9, {3.829620560216395*^9, 
   3.829620562592914*^9}, {3.829620683707933*^9, 3.8296206845274887`*^9}, {
   3.829620832213829*^9, 3.829620881017602*^9}, {3.829621035643607*^9, 
   3.8296210671070147`*^9}, {3.829621221610334*^9, 3.8296212246798143`*^9}, {
   3.82962140130785*^9, 3.829621463679859*^9}, {3.829621498290421*^9, 
   3.829621498589917*^9}, {3.82962154306362*^9, 3.8296215486308947`*^9}, {
   3.829622281660726*^9, 3.829622283231141*^9}, {3.8296229657301064`*^9, 
   3.8296229716922827`*^9}, {3.829623598710095*^9, 3.829623652197987*^9}, {
   3.8296241334177027`*^9, 3.829624184163311*^9}, {3.829624355006941*^9, 
   3.8296243554570427`*^9}, {3.829624385682929*^9, 3.8296243862841988`*^9}, {
   3.829624471119501*^9, 3.829624589578744*^9}, 3.829624714819416*^9, {
   3.829624749647046*^9, 3.8296248405245457`*^9}, {3.829624886956236*^9, 
   3.829624951014646*^9}, {3.8296249872189693`*^9, 3.829624991517354*^9}, {
   3.829625227259445*^9, 3.8296252628320913`*^9}, {3.8296253192175493`*^9, 
   3.8296253461681013`*^9}, {3.8296253811603413`*^9, 3.829625401921142*^9}, {
   3.8296254818258133`*^9, 3.829625534509468*^9}, {3.829625601972301*^9, 
   3.829625625379465*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4bac3604-d82b-4d99-bdb1-74e42b8e69b6"],

Cell[BoxData[
 TemplateBox[{"\"6 x 16^1 + \"", "\"4 x 16^0\"", "\" = 256\""},
  "RowDefault"]], "Output",
 CellChangeTimes->{
  3.829621549110951*^9, 3.829622283854838*^9, {3.829623599470536*^9, 
   3.8296236525199127`*^9}, {3.829624162854231*^9, 3.8296241845147667`*^9}, {
   3.8296243600935593`*^9, 3.8296243869043903`*^9}, {3.829624526521469*^9, 
   3.8296245630016413`*^9}, 3.829624716447873*^9, {3.829624775147215*^9, 
   3.829624812139698*^9}, 3.8296248447125683`*^9, 3.829624890803631*^9, 
   3.829624997506542*^9, 3.829625441551771*^9, {3.8296257412549667`*^9, 
   3.829625741431011*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"8cbd1b29-b3b9-4a88-8b30-765e2279c430"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{
   RowBox[{"FromDigits", "[", 
    RowBox[{"\"\<1024\>\"", ",", "10"}], "]"}], ",", " ", "32"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.829371358043107*^9, {3.829449195558399*^9, 3.829449220502887*^9}, 
   3.8294503850626183`*^9, {3.829450473275938*^9, 3.829450554492736*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"801c69fe-f518-4d6d-a194-b7b8c8cb8200"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   StyleBox[
    SubscriptBox["\<\"100\"\>", "\<\"32\"\>"],
    ShowStringCharacters->False],
   1024,
   Editable->False],
  BaseForm[#, 32]& ]], "Output",
 CellChangeTimes->{3.829625741454658*^9},
 CellLabel->
  "Out[23]//BaseForm=",ExpressionUUID->"2e33a89e-d926-4173-b06a-21cd5a6eb5b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  InterpretationBox[
   StyleBox[
    SubscriptBox["\<\"100\"\>", "\<\"32\"\>"],
    ShowStringCharacters->False],
   1024,
   Editable->False],
  BaseForm[#, 32]& ]], "Input",
 CellChangeTimes->{3.829620982101882*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"b25ac53e-4db3-44e7-b3d1-d15c3fb11c4c"],

Cell[BoxData["1024"], "Output",
 CellChangeTimes->{3.829625741480897*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"7a881f31-794f-4d9e-a136-650c7a690de0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8296214797175293`*^9, 3.829621522922515*^9}, {
   3.8296215614202003`*^9, 3.829621561940188*^9}, {3.829622149546238*^9, 
   3.8296221506412067`*^9}, {3.829622286300721*^9, 3.82962228691372*^9}, {
   3.8296233237485247`*^9, 3.8296233492242403`*^9}, {3.829623460611627*^9, 
   3.829623523067379*^9}, {3.8296236140418043`*^9, 3.829623614360235*^9}, 
   3.829623689469038*^9, {3.829623787547235*^9, 3.829623787926135*^9}, {
   3.829623925855811*^9, 3.82962394239459*^9}, {3.829624045771673*^9, 
   3.8296240464877167`*^9}, {3.829624191856003*^9, 3.829624229155909*^9}, {
   3.8296246042987833`*^9, 3.829624604486514*^9}, {3.829624654670573*^9, 
   3.829624654972924*^9}, 3.8296247198963633`*^9, 3.829624790973097*^9, {
   3.82962484957817*^9, 3.8296248595607843`*^9}, {3.829625000459867*^9, 
   3.829625039609126*^9}, {3.829625120875086*^9, 3.829625154905493*^9}, {
   3.829625213532119*^9, 3.829625217166647*^9}, {3.829625447467733*^9, 
   3.8296254702277822`*^9}, {3.829625550456772*^9, 3.829625550820178*^9}, 
   3.8296256343193073`*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"b8a6f658-1e06-42dd-a588-27d2853f16d6"],

Cell[CellGroupData[{

Cell["", "Item",
 CellChangeTimes->{
  3.82962554569701*^9},ExpressionUUID->"10406515-851c-446c-a98d-e54b3787d5b1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.8296248559803133`*^9, {3.829625558481359*^9, 3.829625559398786*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"b3d6a36e-2bbe-42bb-baee-d4b1cb9835bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Mod"}]], "Input",
 CellChangeTimes->{
  3.829622310003634*^9, {3.8296240340642023`*^9, 3.829624055331047*^9}, {
   3.829624097744246*^9, 3.829624101193104*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"33b4e559-1455-4a80-86fc-089731960030"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Mod",
              ButtonNote->"paclet:ref/Mod"],
             "\"paclet:ref/Mod\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Mod\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the remainder on division of \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) by \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Mod\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses an offset \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Mod", 
                    "paclet:ref/Mod", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL["http://reference.wolfram.com/language/ref/Mod.html"],
                     None}, 
                    "http://reference.wolfram.com/language/ref/Mod.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "Listable", ",", "NumericFunction", ",", "Protected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Mod\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{20., {6., 14.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{20., {6., 14.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Mod",
              ButtonNote->"paclet:ref/Mod"],
             "\"paclet:ref/Mod\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Mod\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the remainder on division of \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) by \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Mod\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses an offset \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{15., {2., 13.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{15., {2., 13.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Mod\", \"[\", RowBox[{StyleBox[\"m\", \"TI\"], \",\", \
StyleBox[\"n\", \"TI\"]}], \"]\"}]\) gives the remainder on division of \
\!\(\*StyleBox[\"m\", \"TI\"]\) by \!\(\*StyleBox[\"n\", \"TI\"]\). \n\
\!\(\*RowBox[{\"Mod\", \"[\", RowBox[{StyleBox[\"m\", \"TI\"], \",\", \
StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"d\", \"TI\"]}], \"]\"}]\) uses an \
offset \!\(\*StyleBox[\"d\", \"TI\"]\). ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Mod", "Web" -> 
      "http://reference.wolfram.com/language/ref/Mod.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Listable, NumericFunction, Protected},
     "FullName" -> "System`Mod"], False]]], "Output",
 CellChangeTimes->{{3.829622310914481*^9, 3.829622314506308*^9}, {
   3.8296240400815277`*^9, 3.8296240561288853`*^9}, {3.829624098463916*^9, 
   3.8296241015601873`*^9}, 3.829625741672098*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"cc911ea5-8d6a-41f5-9c23-afe9d7aa830e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$MachinePrecision"], "Input",
 CellChangeTimes->{{3.829623567448605*^9, 3.8296235693866587`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"2fdc744a-5cbf-4419-925d-121a918dd9e4"],

Cell[BoxData["15.954589770191003`"], "Output",
 CellChangeTimes->{3.829623569646147*^9, 3.82962574167916*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"18a6e212-67e4-4016-afb4-dbf2732a4d1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"digits", " ", "=", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"0", ",", "9"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ltmp", " ", "=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{"digits", ",", 
    RowBox[{"ToUpperCase", "[", 
     RowBox[{"CharacterRange", "[", 
      RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], "]"}], ",", " ", 
    RowBox[{"ToLowerCase", "[", 
     RowBox[{"CharacterRange", "[", 
      RowBox[{"\"\<a\>\"", ",", "\"\<z\>\""}], "]"}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.829624305955731*^9, 3.829624327744195*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"e21a1937-028b-416e-b629-8a065bd7a19e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
   ",", "8", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{{3.829624306700001*^9, 3.829624328415472*^9}, 
   3.829625741685605*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"7748e901-7f8a-4cf6-ba28-3b741807280a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
   ",", "8", ",", "9", ",", "\<\"A\"\>", ",", "\<\"B\"\>", ",", "\<\"C\"\>", 
   ",", "\<\"D\"\>", ",", "\<\"E\"\>", ",", "\<\"F\"\>", ",", "\<\"G\"\>", 
   ",", "\<\"H\"\>", ",", "\<\"I\"\>", ",", "\<\"J\"\>", ",", "\<\"K\"\>", 
   ",", "\<\"L\"\>", ",", "\<\"M\"\>", ",", "\<\"N\"\>", ",", "\<\"O\"\>", 
   ",", "\<\"P\"\>", ",", "\<\"Q\"\>", ",", "\<\"R\"\>", ",", "\<\"S\"\>", 
   ",", "\<\"T\"\>", ",", "\<\"U\"\>", ",", "\<\"V\"\>", ",", "\<\"W\"\>", 
   ",", "\<\"X\"\>", ",", "\<\"Y\"\>", ",", "\<\"Z\"\>", ",", "\<\"a\"\>", 
   ",", "\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"d\"\>", ",", "\<\"e\"\>", 
   ",", "\<\"f\"\>", ",", "\<\"g\"\>", ",", "\<\"h\"\>", ",", "\<\"i\"\>", 
   ",", "\<\"j\"\>", ",", "\<\"k\"\>", ",", "\<\"l\"\>", ",", "\<\"m\"\>", 
   ",", "\<\"n\"\>", ",", "\<\"o\"\>", ",", "\<\"p\"\>", ",", "\<\"q\"\>", 
   ",", "\<\"r\"\>", ",", "\<\"s\"\>", ",", "\<\"t\"\>", ",", "\<\"u\"\>", 
   ",", "\<\"v\"\>", ",", "\<\"w\"\>", ",", "\<\"x\"\>", ",", "\<\"y\"\>", 
   ",", "\<\"z\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.829624306700001*^9, 3.829624328415472*^9}, 
   3.829625741687307*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"4e1d184f-cebc-49ab-887c-44b9a076c45b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "ltmp", "]"}]], "Input",
 CellChangeTimes->{{3.8296243296999693`*^9, 3.829624335153599*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d358558c-7e5e-48d3-99a0-7a048a7a90b0"],

Cell[BoxData["62"], "Output",
 CellChangeTimes->{3.829624335419816*^9, 3.829625741692399*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"dfbf13f9-3feb-4eaf-9ffc-4e5d59072a8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Converter10ToN", "[", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{3.82962556483393*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"36de083c-2955-48a2-b758-fdb301d59451"],

Cell[BoxData["\<\"Input values not supported\"\>"], "Print",
 CellChangeTimes->{{3.829625741716815*^9, 3.8296257488524942`*^9}},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"3799090c-c97b-42dd-9fc2-478db19ac5c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Converter10ToN", "[", 
  RowBox[{"10", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.829625750144217*^9, 3.829625755562912*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"88da3760-0bf8-4f4c-a178-fe5cb623941d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"10 / 3 = 3 R 1 = 1\"\>"},
    {"\<\"----------------\"\>"},
    {"\<\"3 / 3 = 1 R 0 = 0\"\>"},
    {"\<\"----------------\"\>"},
    {"\<\"1 / 3 = 0 R 1 = 1\"\>"},
    {"\<\"----------------\"\>"},
    {"\<\"Result is: 101\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.829625755827077*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"02fc3787-17ba-4c12-8d29-e4c86b8a651b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BasePanelProject", "[", "]"}]], "Input",
 CellChangeTimes->{{3.829625758570903*^9, 3.8296257647120333`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"523778a4-39ca-4b51-834d-0f7ca73d300f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{Private`InputBase$$ = 21, Private`OutputBase$$ = 8, 
    Value$$ = Private`BF, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[Value$$], 1, 10000, 1}, {
      Hold[Private`InputBase$$], 2, 36, 1}, {
      Hold[Private`OutputBase$$], 2, 36, 1}, {
      Hold[
       Button["Genera Esercizio", True]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Button["Verifica Risultato", True]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Button["Mostra Soluzione", True]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Button["Pulisci Soluzione", True]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {23., {0., 13.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {
       Private`InputBase$$ = 2, Private`OutputBase$$ = 2, Value$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Value$$, 
      "Specifications" :> {{Value$$, 1, 10000, 1}, {
        Private`InputBase$$, 2, 36, 1}, {Private`OutputBase$$, 2, 36, 1}, 
        Button["Genera Esercizio", True], 
        Button["Verifica Risultato", True], 
        Button["Mostra Soluzione", True], 
        Button["Pulisci Soluzione", True]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{437., {244., 253.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.82962576504288*^9, {3.829625848507139*^9, 3.8296258499799757`*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"3859f172-2e56-4738-8c0c-18cd2bd6e7bf"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1370, 780},
WindowMargins->{{15, Automatic}, {Automatic, 49}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7f26ec41-8e8b-4517-994f-9a059d362db7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2137, 51, 443, "Input",ExpressionUUID->"dc8673ef-990c-4ab4-a413-0ea8a2a2c4a7",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2720, 75, 366, 7, 70, "Input",ExpressionUUID->"83ba9a24-105e-453d-9ab2-057fc8b72e8f",
 InitializationCell->True],
Cell[3089, 84, 877, 12, 52, "Output",ExpressionUUID->"ac97c0f5-e226-4c1d-bf88-bad9da2cf133"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4003, 101, 684, 12, 195, "Input",ExpressionUUID->"9e4ab47b-4075-49ba-8051-48e74256a661",
 InitializationCell->True],
Cell[4690, 115, 990, 14, 177, "Output",ExpressionUUID->"c6baaaf9-970f-4476-9160-8d9c545e11ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5717, 134, 813, 14, 195, "Input",ExpressionUUID->"36c52f8c-b143-44bf-adf6-d9a55d959f3e",
 InitializationCell->True,
 InitializationGroup->True],
Cell[6533, 150, 1070, 14, 177, "Output",ExpressionUUID->"6a7ae74f-1ddf-4471-ae9e-c8f7d53e1ddf"]
}, Open  ]],
Cell[7618, 167, 419, 6, 78, "Input",ExpressionUUID->"efc5497a-4240-4b55-b31a-e89f04d2ed94"],
Cell[CellGroupData[{
Cell[8062, 177, 215, 3, 78, "Code",ExpressionUUID->"700f309b-d38f-4f21-a2e9-5c63753d2137"],
Cell[8280, 182, 774, 11, 52, "Output",ExpressionUUID->"3050c1a3-aaf7-4a29-9112-3fc7f50f574d"]
}, Open  ]],
Cell[9069, 196, 10834, 193, 1384, "Code",ExpressionUUID->"7d260a63-9de2-47a9-9cab-505ba266263a"],
Cell[CellGroupData[{
Cell[19928, 393, 16722, 321, 2196, "Code",ExpressionUUID->"4bac3604-d82b-4d99-bdb1-74e42b8e69b6"],
Cell[36653, 716, 675, 11, 52, "Output",ExpressionUUID->"8cbd1b29-b3b9-4a88-8b30-765e2279c430"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37365, 732, 412, 9, 46, "Input",ExpressionUUID->"801c69fe-f518-4d6d-a194-b7b8c8cb8200"],
Cell[37780, 743, 334, 11, 69, "Output",ExpressionUUID->"2e33a89e-d926-4173-b06a-21cd5a6eb5b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38151, 759, 320, 10, 46, "Input",ExpressionUUID->"b25ac53e-4db3-44e7-b3d1-d15c3fb11c4c"],
Cell[38474, 771, 152, 2, 52, "Output",ExpressionUUID->"7a881f31-794f-4d9e-a136-650c7a690de0"]
}, Open  ]],
Cell[38641, 776, 1164, 16, 46, "Input",ExpressionUUID->"b8a6f658-1e06-42dd-a588-27d2853f16d6"],
Cell[CellGroupData[{
Cell[39830, 796, 115, 2, 49, "Item",ExpressionUUID->"10406515-851c-446c-a98d-e54b3787d5b1"],
Cell[39948, 800, 198, 3, 46, "Input",ExpressionUUID->"b3d6a36e-2bbe-42bb-baee-d4b1cb9835bf"],
Cell[CellGroupData[{
Cell[40171, 807, 268, 5, 46, "Input",ExpressionUUID->"33b4e559-1455-4a80-86fc-089731960030"],
Cell[40442, 814, 13246, 309, 176, "Output",ExpressionUUID->"cc911ea5-8d6a-41f5-9c23-afe9d7aa830e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53725, 1128, 190, 2, 46, "Input",ExpressionUUID->"2fdc744a-5cbf-4419-925d-121a918dd9e4"],
Cell[53918, 1132, 188, 2, 52, "Output",ExpressionUUID->"18a6e212-67e4-4016-afb4-dbf2732a4d1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54143, 1139, 663, 15, 78, "Input",ExpressionUUID->"e21a1937-028b-416e-b629-8a065bd7a19e"],
Cell[54809, 1156, 331, 7, 52, "Output",ExpressionUUID->"7748e901-7f8a-4cf6-ba28-3b741807280a"],
Cell[55143, 1165, 1319, 20, 84, "Output",ExpressionUUID->"4e1d184f-cebc-49ab-887c-44b9a076c45b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56499, 1190, 209, 3, 46, "Input",ExpressionUUID->"d358558c-7e5e-48d3-99a0-7a048a7a90b0"],
Cell[56711, 1195, 172, 2, 52, "Output",ExpressionUUID->"dfbf13f9-3feb-4eaf-9ffc-4e5d59072a8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56920, 1202, 229, 5, 46, "Input",ExpressionUUID->"36de083c-2955-48a2-b758-fdb301d59451"],
Cell[57152, 1209, 233, 4, 36, "Print",ExpressionUUID->"3799090c-c97b-42dd-9fc2-478db19ac5c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57422, 1218, 236, 4, 46, "Input",ExpressionUUID->"88da3760-0bf8-4f4c-a178-fe5cb623941d"],
Cell[57661, 1224, 574, 15, 203, "Output",ExpressionUUID->"02fc3787-17ba-4c12-8d29-e4c86b8a651b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58272, 1244, 211, 3, 46, "Input",ExpressionUUID->"523778a4-39ca-4b51-834d-0f7ca73d300f"],
Cell[58486, 1249, 2407, 52, 542, "Output",ExpressionUUID->"3859f172-2e56-4738-8c0c-18cd2bd6e7bf"]
}, Open  ]]
}, Open  ]]
}
]
*)

